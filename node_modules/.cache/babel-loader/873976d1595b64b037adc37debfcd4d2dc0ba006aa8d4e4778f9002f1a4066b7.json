{"ast":null,"code":"// https://unpkg.com/pokemons@1.1.0/pokemons.json\n\nimport { formatName } from \"../utils/utils\";\nexport async function fetchPokemons() {\n  const response = await fetch(\"https://unpkg.com/pokemons@1.1.0/pokemons.json\");\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch pokemons\");\n  }\n  const results = await response.json();\n  const pokemons = results.results.map(pokemon => {\n    var _pokemon$types;\n    return {\n      id: pokemon.national_number,\n      name: pokemon.name,\n      imgSrc: `https://img.pokemondb.net/sprites/black-white/anim/normal/${formatName(pokemon.name.toLowerCase())}.gif`,\n      types: (_pokemon$types = pokemon.types) !== null && _pokemon$types !== void 0 ? _pokemon$types : []\n    };\n  });\n  debugger;\n  const uniquePokemons = pokemons.filter((pokemon, index) => pokemons.findIndex(other => other.id === pokemon.id) === index);\n  return uniquePokemons;\n}","map":{"version":3,"names":["formatName","fetchPokemons","response","fetch","ok","Error","results","json","pokemons","map","pokemon","id","national_number","name","imgSrc","toLowerCase","types","uniquePokemons","filter","index","findIndex","other"],"sources":["C:/Users/luisr/Desktop/pokedex/src/api/fetchPokemons.tsx"],"sourcesContent":["// https://unpkg.com/pokemons@1.1.0/pokemons.json\n\nimport { Pokemon } from \"../types/types.d\";\nimport { formatName } from \"../utils/utils\";\n\nexport async function fetchPokemons(): Promise<Pokemon[]> {\n  const response = await fetch(\"https://unpkg.com/pokemons@1.1.0/pokemons.json\");\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch pokemons\");\n  }\n\n  const results = await response.json();\n  const pokemons = results.results.map((pokemon: any) => ({\n      id: pokemon.national_number,\n      name: pokemon.name,\n      imgSrc: `https://img.pokemondb.net/sprites/black-white/anim/normal/${formatName(pokemon.name.toLowerCase())}.gif`,\n      types: pokemon.types ?? []\n    }));\n    \n  debugger;\n  const uniquePokemons = pokemons.filter(\n    (pokemon: any, index: number) =>\n      pokemons.findIndex((other: any) => other.id === pokemon.id) === index\n  );\n\n  return uniquePokemons;\n}"],"mappings":"AAAA;;AAGA,SAASA,UAAU,QAAQ,gBAAgB;AAE3C,OAAO,eAAeC,aAAa,GAAuB;EACxD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgD,CAAC;EAC9E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7C;EAEA,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;EACrC,MAAMC,QAAQ,GAAGF,OAAO,CAACA,OAAO,CAACG,GAAG,CAAEC,OAAY;IAAA;IAAA,OAAM;MACpDC,EAAE,EAAED,OAAO,CAACE,eAAe;MAC3BC,IAAI,EAAEH,OAAO,CAACG,IAAI;MAClBC,MAAM,EAAG,6DAA4Dd,UAAU,CAACU,OAAO,CAACG,IAAI,CAACE,WAAW,EAAE,CAAE,MAAK;MACjHC,KAAK,oBAAEN,OAAO,CAACM,KAAK,2DAAI;IAC1B,CAAC;EAAA,CAAC,CAAC;EAEL;EACA,MAAMC,cAAc,GAAGT,QAAQ,CAACU,MAAM,CACpC,CAACR,OAAY,EAAES,KAAa,KAC1BX,QAAQ,CAACY,SAAS,CAAEC,KAAU,IAAKA,KAAK,CAACV,EAAE,KAAKD,OAAO,CAACC,EAAE,CAAC,KAAKQ,KAAK,CACxE;EAED,OAAOF,cAAc;AACvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}